{"version":3,"sources":["components/home/HomeStyles.tsx","components/home/index.tsx","components/about/index.tsx","components/values/index.tsx","components/menu/MenuStyles.tsx","components/menu/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Item","styled","nav","SubItem","div","Home","Grid","container","spacing","item","xs","sm","Values","MenuContainer","MenuItem","Image","Navigation","className","to","src","alt","App","exact","path","component","About","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uRAEaA,EAAOC,IAAOC,IAAV,yJAQJC,EAAUF,IAAOC,IAAV,yJ,GASID,IAAOG,IAAV,4B,MCONC,EAtB2B,SAAC,GACvC,OADgD,eAE5C,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,SACI,cAACV,EAAD,0DAEJ,cAACM,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACR,EAAD,yBAEJ,cAACG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACR,EAAD,oBAEJ,cAACG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACR,EAAD,oCAEJ,cAACG,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACI,cAACR,EAAD,mCCNDE,EARmC,SAAC,GAC/C,OADwD,eAEpD,+CCMOO,EARsC,SAAC,GAClD,OAD2D,eAEvD,oDCNKC,EAAgBZ,IAAOC,IAAV,mKAUbC,EAAUF,IAAOG,IAAV,4BAGPU,EAAWb,IAAOG,IAAV,6KAURW,EAAQd,IAAOG,IAAV,+CCHHY,EAlBiC,SAAC,GAC7C,OADsD,eAElD,wBAAQC,UAAU,aAAlB,SACI,eAACJ,EAAD,WACI,cAAC,EAAD,UACI,cAACE,EAAD,UAAO,cAAC,IAAD,CAAMG,GAAG,sBAAT,SAA+B,qBAAKC,IAAI,mEAAmEC,IAAI,eAE1H,eAAC,EAAD,WACI,cAAC,EAAD,UAAS,cAAC,IAAD,CAAMF,GAAG,4BAAT,yBACT,cAAC,EAAD,UAAS,cAAC,IAAD,CAAMA,GAAG,6BAAT,mBACT,cAAC,EAAD,UAAS,cAAC,IAAD,CAAMA,GAAG,6BAAT,mCACT,cAAC,EAAD,UAAS,cAAC,IAAD,CAAMA,GAAG,6BAAT,6BCOdG,EAfH,WACV,OACE,qBAAKJ,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,sBAAsBC,UAAWnB,IACnD,cAAC,IAAD,CAAOkB,KAAK,4BAA4BC,UAAWC,IACnD,cAAC,IAAD,CAAOF,KAAK,6BAA6BC,UAAWZ,aCH1Cc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,SDoItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.891ee7e2.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Item = styled.nav`\n    height: 300px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border: solid 1px grey;\n`\n\nexport const SubItem = styled.nav`\n    height: 300px;\n    border: solid 1px gray;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\n\nexport const MenuItem = styled.div`\n`","import React from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport { Item, SubItem } from './HomeStyles';\n\nconst Home: React.FunctionComponent<{}> = ({ }) => {\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12}>\n                <Item>Te damos la bienvenida a trocafone- intro</Item>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <SubItem>Que es T</SubItem>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <SubItem >VyC</SubItem>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <SubItem >Estructura y equipo</SubItem>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <SubItem>Primeros pasos</SubItem>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Home","import React from 'react'\n\ntype AboutProps = {\n\n}\n\nconst Home: React.FunctionComponent<AboutProps> = ({ }) => {\n    return (\n        <div>\n            About troca\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\n\ntype ValuesProps = {\n\n}\n\nconst Values: React.FunctionComponent<ValuesProps> = ({ }) => {\n    return (\n        <div>\n            Nuestros valores\n        </div>\n    )\n}\n\nexport default Values","import styled from 'styled-components'\n\nexport const MenuContainer = styled.nav`\n    width: 100%;\n    display:flex;\n    padding-bottom: 30px;\n    @media (max-width: 768px) {\n    flex-direction: column;\n    }\n\n`\n\nexport const SubItem = styled.div`\n`\n\nexport const MenuItem = styled.div`\n    display:flex;\n    justify-content: space-between;\n    width: 100%;\n    @media (max-width: 768px) {\n    flex-direction: column;\n    }\n\n`\n\nexport const Image = styled.div`\n    width: 250px;\n`\n\n\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { MenuContainer, MenuItem, SubItem, Image } from './MenuStyles';\n\nconst Navigation: React.FunctionComponent<{}> = ({ }) => {\n    return (\n        <header className=\"App-header\">\n            <MenuContainer>\n                <MenuItem>\n                    <Image><Link to=\"/trocafone-handbook\"><img src=\"https://www.trocafone.com/assets/img/global/common/trocafone.svg\" alt=\"Logo\" /></Link></Image>\n                </MenuItem>\n                <MenuItem>\n                    <SubItem><Link to=\"/trocafone-handbook/about\">Que es T?</Link></SubItem>\n                    <SubItem><Link to=\"/trocafone-handbook/values\">VyC</Link></SubItem>\n                    <SubItem><Link to=\"/trocafone-handbook/values\">Estructura y equipo</Link></SubItem>\n                    <SubItem><Link to=\"/trocafone-handbook/values\">Vida</Link></SubItem>\n                </MenuItem>\n            </MenuContainer>\n        </header>\n    )\n}\n\nexport default Navigation","import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./components/home\"\nimport About from \"./components/about\"\nimport Values from \"./components/values\"\nimport Navigation from './components/menu/index';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/trocafone-handbook\" component={Home} />\n          <Route path=\"/trocafone-handbook/about\" component={About} />\n          <Route path=\"/trocafone-handbook/values\" component={Values} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}